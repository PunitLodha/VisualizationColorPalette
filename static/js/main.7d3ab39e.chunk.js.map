{"version":3,"sources":["components/Graph.js","components/GraphsContainer.js","components/PaletteSelector.js","App.js","serviceWorker.js","index.js"],"names":["Title","styled","div","Graph","graph","title","colors","color","bars","barHeight","length","columnWidth","offsets","rects","map","bar","index","width","height","y","fill","columns","column","x","getPercent","val","donut","className","cx","cy","r","stroke","strokeWidth","strokeDasharray","strokeDashoffset","bubble","style","border","Grid","props","GraphsContainer","PaletteSelector","selected","setSelected","setColor","s","e","Array","from","repeat","_","i","display","flexDirection","padding","justifyContent","margin","type","name","value","checked","onChange","event","target","toString","alignItems","a","backgroundColor","App","useState","Number","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wYAGA,IAAMA,EAAQC,IAAOC,IAAV,KA4FIC,EAtFD,SAAC,GAA8B,IAiEvCC,EAjEWC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAIxBC,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5BC,EAAY,IAAuBD,EAAKE,OACxCC,EAAc,IAAsBH,EAAKE,OAEzCE,EAAU,CAAC,GAAI,IAAK,GAAI,GAAI,IAE5BC,EAAQL,EAAKM,KAAI,SAACC,EAAKC,GAAN,OACrB,0BACEC,MAAa,EAANF,EACPG,OAAQT,EACRU,EAAG,IAXO,GAWOV,GAAaO,EAC9BI,KAAMd,EAAOU,QAIXK,EAAUb,EAAKM,KAAI,SAACQ,EAAQN,GAAT,OACvB,0BACEI,KAAMd,EAAOU,GACbC,MAAON,EACPO,OAAQI,EACRC,EAAG,IArBO,GAqBOZ,GAAeK,EAChCG,EAvBW,IAuBCG,OAIVE,EAAa,SAACC,GAAD,OAAU,IAAMA,EAAO,KAEpCC,EACJ,oCACE,4BACEC,UAAU,aACVC,GAAIX,IACJY,GAAIX,IACJY,EAAE,MACFV,KAAgB,UAAVb,EAAoB,QAAU,UA/B3B,CAAC,GAAI,GAAI,GAAI,GAAI,IAkCpBO,KAAI,SAACW,EAAKT,GAAN,OACV,4BACEY,GAAIX,IACJY,GAAIX,IACJY,EAAE,MACFV,KAAK,cACLW,OAAQzB,EAAOU,GACfgB,YAAY,KACZC,gBAAe,UAAKT,EAAWC,GAAhB,YAAwBD,EAAW,IAAMC,IACxDS,iBAAgB,UAAKV,EAAWZ,EAAQI,WAM1CmB,EAAS3B,EAAKM,KAAI,SAACW,EAAKT,GAAN,OACtB,4BACEY,GAAIpB,EAAKQ,GAAS,GAAa,IAARA,EACvBa,GAAIX,KAAaN,EAAQI,GAAS,GAAKA,EAAQ,GAC/Cc,EAAS,GAANL,EACHL,KAAMd,EAAOU,QAejB,OATEZ,EADY,QAAVC,EACMQ,EACW,WAAVR,EACDgB,EACW,UAAVhB,EACDqB,EAEAS,EAIR,yBAAKC,MAAO,CAAEC,OAAQ,wBACpB,kBAACrC,EAAD,KAAQK,GACR,yBAAKY,MA9EK,IA8ESC,OA7ER,KA8ERd,K,2PCrFT,IAAMkC,EAAOrC,IAAOC,IAAV,KAMY,SAACqC,GAAD,MAA4B,UAAhBA,EAAMhC,MAAoB,QAAU,WAcvDiC,EAXS,SAAC,GAAuB,IAArBlC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACjC,OACE,kBAAC+B,EAAD,CAAM/B,MAAOA,GACX,kBAAC,EAAD,CAAOF,MAAM,MAAMC,OAAQA,EAAQC,MAAOA,IAC1C,kBAAC,EAAD,CAAOF,MAAM,SAASC,OAAQA,EAAQC,MAAOA,IAC7C,kBAAC,EAAD,CAAOF,MAAM,QAAQC,OAAQA,EAAQC,MAAOA,IAC5C,kBAAC,EAAD,CAAOF,MAAM,SAASC,OAAQA,EAAQC,MAAOA,MCgDpCkC,EAjES,SAAC,GAAwD,IAAtDnC,EAAqD,EAArDA,OAAQoC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,YAAapC,EAAsB,EAAtBA,MAAOqC,EAAe,EAAfA,SACzDd,EAAI,SAACe,EAAGC,GAAJ,OAAUC,MAAMC,KAAK,IAAIC,OAAOH,EAAID,IAAI,SAACK,EAAGC,GAAJ,OAAUN,EAAIM,MAChE,OACE,0BAAMf,MAAO,CAAEgB,QAAS,OAAQC,cAAe,SAAUC,QAAS,SAChE,0BAAMlB,MAAO,CAAEgB,QAAS,OAAQG,eAAgB,WAC9C,2BAAOnB,MAAO,CAAEoB,OAAQ,SACtB,2BACEC,KAAK,QACLC,KAAK,SACLC,MAAM,QACNC,QAAmB,UAAVrD,EACTsD,SAAU,SAACC,GACTlB,EAASkB,EAAMC,OAAOJ,QAExBhC,UAAU,qBAEZ,yCAEF,2BAAOS,MAAO,CAAEoB,OAAQ,SACtB,2BACEC,KAAK,QACLC,KAAK,SACLC,MAAM,QACNC,QAAmB,UAAVrD,EACTsD,SAAU,SAACC,GACTlB,EAASkB,EAAMC,OAAOJ,QAExBhC,UAAU,qBAEZ,0CAGHG,EAAE,EAAGxB,EAAOI,QAAQI,KAAI,SAACW,GAAD,OACvB,yBAAKW,MAAO,CAAEgB,QAAS,SACrB,2BAAOhB,MAAO,CAAEoB,OAAQ,SACtB,2BACEC,KAAK,QACLC,KAAK,SACLC,MAAOlC,EAAIuC,WACXJ,QAASlB,IAAQ,UAAQjB,GACzBoC,SAAU,SAACC,GACTnB,EAAYmB,EAAMC,OAAOJ,QAE3BhC,UAAU,qBAEZ,+CAAiBF,GAAjB,MAEF,yBAAKW,MAAO,CAAEgB,QAAS,OAAQa,WAAY,WACxCnC,EAAE,EAAG,GAAGhB,KAAI,SAACoD,GAAD,OACX,yBACE9B,MAAO,CACL+B,gBAAiB7D,EAAOmB,GAAKyC,GAC7BV,OAAQ,MACRvC,MAAO,OACPC,OAAQ,oBCgGXkD,MApJf,WAAgB,IAAD,EACmBC,mBAAS,KAD5B,mBACN3B,EADM,KACIC,EADJ,OAEa0B,mBAAS,SAFtB,mBAEN9D,EAFM,KAECqC,EAFD,KAGPtC,EAAS,CACb,CAAC,UAAW,UAAW,UAAW,UAAW,WAa7C,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAyCF,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC9E,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,CAAC,UAAW,UAAW,UAAW,UAAW,WAC7C,CAAC,UAAW,UAAW,UAAW,UAAW,WAK7C,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACxD,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGJ,OACE,yBAAK8B,MAAO,CAAEgB,QAAS,SACrB,kBAAC,EAAD,CACEV,SAAUA,EACVpC,OAAQA,EACRqC,YAAaA,EACbpC,MAAOA,EACPqC,SAAUA,IAEZ,kBAAC,EAAD,CAAiBF,SAAUA,EAAUpC,OAAQA,EAAOgE,OAAO5B,IAAYnC,MAAOA,MCvIhEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7d3ab39e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  background-color: #eee;\n  padding: 4px 16px;\n  font-size: px;\n`;\n\nconst Graph = ({ title, colors, color }) => {\n  const width = 550;\n  const height = 250;\n  const space = 10;\n  const bars = [180, 215, 200, 160, 120];\n  const barHeight = (height - space * 6) / bars.length;\n  const columnWidth = (width - space * 6) / bars.length;\n  const donuts = [25, 10, 30, 20, 15];\n  const offsets = [25, 100, 90, 60, 40];\n\n  const rects = bars.map((bar, index) => (\n    <rect\n      width={bar * 2}\n      height={barHeight}\n      y={10 + (space + barHeight) * index}\n      fill={colors[index]}\n    />\n  ));\n\n  const columns = bars.map((column, index) => (\n    <rect\n      fill={colors[index]}\n      width={columnWidth}\n      height={column}\n      x={10 + (space + columnWidth) * index}\n      y={height - column}\n    />\n  ));\n\n  const getPercent = (val) => (630 * val) / 100;\n\n  const donut = (\n    <>\n      <circle\n        className=\"donut-hole\"\n        cx={width / 2}\n        cy={height / 2}\n        r=\"100\"\n        fill={color === 'white' ? 'white' : 'black'}\n      />\n\n      {donuts.map((val, index) => (\n        <circle\n          cx={width / 2}\n          cy={height / 2}\n          r=\"100\"\n          fill=\"transparent\"\n          stroke={colors[index]}\n          strokeWidth=\"30\"\n          strokeDasharray={`${getPercent(val)} ${getPercent(100 - val)}`}\n          strokeDashoffset={`${getPercent(offsets[index])}`}\n        />\n      ))}\n    </>\n  );\n\n  const bubble = bars.map((val, index) => (\n    <circle\n      cx={bars[index] - 50 + index * 100}\n      cy={height / 4 + offsets[index] - 30 * index + 50}\n      r={val * 0.2}\n      fill={colors[index]}\n    />\n  ));\n\n  let graph;\n  if (title === 'Bar') {\n    graph = rects;\n  } else if (title === 'Column') {\n    graph = columns;\n  } else if (title === 'Donut') {\n    graph = donut;\n  } else {\n    graph = bubble;\n  }\n\n  return (\n    <div style={{ border: '1px solid goldenrod' }}>\n      <Title>{title}</Title>\n      <svg width={width} height={height}>\n        {graph}\n      </svg>\n    </div>\n  );\n};\n\nexport default Graph;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Graph from './Graph';\n\nconst Grid = styled.div`\n  display: grid;\n  padding: 32px 20px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, minmax(0, 300px));\n  grid-gap: 10px;\n  background-color: ${(props) => (props.color === 'white' ? 'white' : 'black')};\n`;\n\nconst GraphsContainer = ({ colors, color }) => {\n  return (\n    <Grid color={color}>\n      <Graph title=\"Bar\" colors={colors} color={color} />\n      <Graph title=\"Column\" colors={colors} color={color} />\n      <Graph title=\"Donut\" colors={colors} color={color} />\n      <Graph title=\"Bubble\" colors={colors} color={color} />\n    </Grid>\n  );\n};\n\nexport default GraphsContainer;\n","import React from 'react';\n\nconst PaletteSelector = ({ colors, selected, setSelected, color, setColor }) => {\n  const r = (s, e) => Array.from('x'.repeat(e - s), (_, i) => s + i);\n  return (\n    <form style={{ display: 'flex', flexDirection: 'column', padding: '20px' }}>\n      <form style={{ display: 'flex', justifyContent: 'center' }}>\n        <label style={{ margin: '15px' }}>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"black\"\n            checked={color === 'black'}\n            onChange={(event) => {\n              setColor(event.target.value);\n            }}\n            className=\"form-check-input\"\n          />\n          <span>black </span>\n        </label>\n        <label style={{ margin: '15px' }}>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"white\"\n            checked={color === 'white'}\n            onChange={(event) => {\n              setColor(event.target.value);\n            }}\n            className=\"form-check-input\"\n          />\n          <span>white </span>\n        </label>\n      </form>\n      {r(0, colors.length).map((val) => (\n        <div style={{ display: 'flex' }}>\n          <label style={{ margin: '15px' }}>\n            <input\n              type=\"radio\"\n              name=\"option\"\n              value={val.toString()}\n              checked={selected === `${val}`}\n              onChange={(event) => {\n                setSelected(event.target.value);\n              }}\n              className=\"form-check-input\"\n            />\n            <span>{`Option ${val}`} </span>\n          </label>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            {r(0, 5).map((a) => (\n              <div\n                style={{\n                  backgroundColor: colors[val][a],\n                  margin: '1px',\n                  width: '30px',\n                  height: '30px',\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      ))}\n    </form>\n  );\n};\n\nexport default PaletteSelector;\n","import React, { useState } from 'react';\nimport GraphsContainer from './components/GraphsContainer';\nimport PaletteSelector from './components/PaletteSelector';\n\nfunction App() {\n  const [selected, setSelected] = useState('0');\n  const [color, setColor] = useState('white');\n  const colors = [\n    ['#65E0E0', '#69B2F8', '#6FD39B', '#F77EB9', '#FDB16D'],\n    /* [\n      '#5f98cf',\n      '#434348',\n      '#49a65e',\n      '#f45b5b',\n      '#708090',\n      '#b68c51',\n      '#397550',\n      '#c0493d',\n      '#4f4a7a',\n      '#b381b3',\n    ], */\n    [\n      '#a6f0ff',\n      '#70d49e',\n      '#e898a5',\n      '#007faa',\n      '#f9db72',\n      '#f45b5b',\n      '#1e824c',\n      '#e7934c',\n      '#dadfe1',\n      '#a0618b',\n    ],\n    /*  [\n      '#7cb5ec',\n      '#f7a35c',\n      '#90ee7e',\n      '#7798BF',\n      '#aaeeee',\n      '#ff0066',\n      '#eeaaee',\n      '#55BF3B',\n      '#DF5353',\n      '#7798BF',\n      '#aaeeee',\n    ],\n    [\n      '#00c0c7',\n      '#5144d3',\n      '#e8871a',\n      '#da3490',\n      '#9089fa',\n      '#47e26f',\n      '#2780eb',\n      '#6f38b1',\n      '#dfbf03',\n      '#cb6f10',\n      '#268d6c',\n      '#9bec54',\n    ], \n    [\n      '#1f77b4',\n      '#ff7f0e',\n      '#2ca02c',\n      '#d62728',\n      '#9467bd',\n      '#8c564b',\n      '#e377c2',\n      '#7f7f7f',\n      '#bcbd22',\n      '#17becf',\n    ], */\n    ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    [\n      '#4e79a7',\n      '#f28e2c',\n      '#e15759',\n      '#76b7b2',\n      '#59a14f',\n      '#edc949',\n      '#af7aa1',\n      '#ff9da7',\n      '#9c755f',\n      '#bab0ab',\n    ],\n    [\n      '#FEBB00',\n      '#F1396B',\n      '#5638FF',\n      '#67D4F7',\n      '#EB82CE',\n      '#9EC75E',\n      '#5AD7C4',\n      '#88B2B5',\n      '#6882BA',\n    ],\n    ['#2fb4e1', '#ec7500', '#067db7', '#f69db7', '#26465b'],\n    ['#e03e18', '#f8931f', '#fcbf10', '#67acbc', '#3f4553'],\n    /* ['#8f7dac', '#e03e93', '#62b6d4', '#afc3c2', '#415d69'],\n    ['#e75035', '#84b7ba', '#e7a51b', '#608156', '#175b8a'],\n    ['#5fb6c7', '#ffd159', '#c9c77c', '#fa7413', '#e2e3e5'],\n    ['#01b8aa', '#28383c', '#fd625e', '#f2c80f', '#5f6b6d', '#8ad4eb'], */\n    ['#f4a522', '#6092cd', '#61b546', '#aa4498', '#dccc77', '#89cdf0'],\n    [\n      '#1f77b4',\n      '#aec7e8',\n      '#ff7f0e',\n      '#ffbb78',\n      '#2ca02c',\n      '#98df8a',\n      '#d62728',\n      '#ff9896',\n      '#9467bd',\n      '#c5b0d5',\n      '#8c564b',\n      '#c49c94',\n      '#e377c2',\n      '#f7b6d2',\n      '#7f7f7f',\n      '#c7c7c7',\n      '#bcbd22',\n      '#dbdb8d',\n      '#17becf',\n      '#9edae5',\n    ],\n    [\n      '#006ba4',\n      '#ff800e',\n      '#ababab',\n      '#595959',\n      '#5f9ed1',\n      '#c85200',\n      '#898989',\n      '#a2c8ec',\n      '#ffbc79',\n      '#cfcfcf',\n    ],\n  ];\n  return (\n    <div style={{ display: 'flex' }}>\n      <PaletteSelector\n        selected={selected}\n        colors={colors}\n        setSelected={setSelected}\n        color={color}\n        setColor={setColor}\n      />\n      <GraphsContainer selected={selected} colors={colors[Number(selected)]} color={color} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}